{"remainingRequest":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\src\\views\\QrScanner.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\src\\views\\QrScanner.vue","mtime":1614128442273},{"path":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport to from 'await-to-js';\r\n\r\nimport { QrcodeStream, QrcodeDropZone, QrcodeCapture } from 'vue-qrcode-reader'\r\nimport EasyCamera from 'easy-vue-camera';\r\n\r\n \r\nexport default {\r\n\r\n  components: { QrcodeStream, QrcodeReader,  'v-easy-camera': EasyCamera },\r\n\r\n  data () {\r\n    return {\r\n      camera: 'rear',\r\n      noRearCamera: false,\r\n      noFrontCamera: false\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    switchCamera () {\r\n      switch (this.camera) {\r\n        case 'front':\r\n          this.camera = 'rear'\r\n          break\r\n        case 'rear':\r\n          this.camera = 'front'\r\n          break\r\n      }\r\n    },\r\n\r\n    async onInit (promise) {\r\n      try {\r\n        await promise\r\n      } catch (error) {\r\n        const triedFrontCamera = this.camera === 'front'\r\n        const triedRearCamera = this.camera === 'rear'\r\n\r\n        const cameraMissingError = error.name === 'OverconstrainedError'\r\n\r\n        if (triedRearCamera && cameraMissingError) {\r\n          this.noRearCamera = true\r\n        }\r\n\r\n        if (triedFrontCamera && cameraMissingError) {\r\n          this.noFrontCamera = true\r\n        }\r\n\r\n        console.error(error)\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["QrScanner.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"QrScanner.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <p class=\"error\" v-if=\"noFrontCamera\">\r\n      You don't seem to have a front camera on your device\r\n    </p>\r\n\r\n    <p class=\"error\" v-if=\"noRearCamera\">\r\n      You don't seem to have a rear camera on your device\r\n    </p>\r\n\r\n    <qrcode-stream :camera=\"camera\" @init=\"onInit\">\r\n      <button @click=\"switchCamera\">\r\n        <img :src=\"$withBase('/camera-switch.svg')\" alt=\"switch camera\">\r\n      </button>\r\n    </qrcode-stream>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport to from 'await-to-js';\r\n\r\nimport { QrcodeStream, QrcodeDropZone, QrcodeCapture } from 'vue-qrcode-reader'\r\nimport EasyCamera from 'easy-vue-camera';\r\n\r\n \r\nexport default {\r\n\r\n  components: { QrcodeStream, QrcodeReader,  'v-easy-camera': EasyCamera },\r\n\r\n  data () {\r\n    return {\r\n      camera: 'rear',\r\n      noRearCamera: false,\r\n      noFrontCamera: false\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    switchCamera () {\r\n      switch (this.camera) {\r\n        case 'front':\r\n          this.camera = 'rear'\r\n          break\r\n        case 'rear':\r\n          this.camera = 'front'\r\n          break\r\n      }\r\n    },\r\n\r\n    async onInit (promise) {\r\n      try {\r\n        await promise\r\n      } catch (error) {\r\n        const triedFrontCamera = this.camera === 'front'\r\n        const triedRearCamera = this.camera === 'rear'\r\n\r\n        const cameraMissingError = error.name === 'OverconstrainedError'\r\n\r\n        if (triedRearCamera && cameraMissingError) {\r\n          this.noRearCamera = true\r\n        }\r\n\r\n        if (triedFrontCamera && cameraMissingError) {\r\n          this.noFrontCamera = true\r\n        }\r\n\r\n        console.error(error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 10px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n</style>"]}]}