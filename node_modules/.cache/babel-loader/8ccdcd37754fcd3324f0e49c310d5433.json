{"remainingRequest":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\src\\router.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\src\\router.js","mtime":1614148303087},{"path":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Vue-MESI(149)\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from './views/Home.vue';\nimport store from './store';\nVue.use(Router); //연결된 하나만 component 불러옴, 웹페이지 속도 향상\n\nvar About = function About() {\n  return import('./views/About.vue');\n};\n\nvar EngineerManage = function EngineerManage() {\n  return import('./views/EngineerManage.vue');\n};\n\nvar Notice = function Notice() {\n  return import('./views/Notice.vue');\n};\n\nvar HospitalInfo = function HospitalInfo() {\n  return import('./views/HospitalInfo.vue');\n};\n\nvar EquipmentManage = function EquipmentManage() {\n  return import('./views/EquipmentManage.vue');\n};\n\nvar ServiceStatusManage = function ServiceStatusManage() {\n  return import('./views/ServiceStatusManage.vue');\n};\n\nvar AsManage = function AsManage() {\n  return import('./views/AsManage.vue');\n};\n\nvar ChangePW = function ChangePW() {\n  return import('./views/ChangePW.vue');\n};\n\nvar QrScanner = function QrScanner() {\n  return import('./views/QrScanner.vue');\n};\n\nvar EX = function EX() {\n  return import('./views/EX.vue');\n};\n\nvar AddServiceReport = function AddServiceReport() {\n  return import('./views/AddServiceReport.vue');\n};\n\nvar Signin = function Signin() {\n  return import('./views/Signin.vue');\n};\n\nvar Canvas = function Canvas() {\n  return import('./views/Canvas.vue');\n};\n\nvar rejectAuthUser = function rejectAuthUser(to, from, next) {\n  if (store.state.isLogin === true) {\n    //이미 로그인된 유저는 로그인 페이지 접속 못함\n    alert('로그아웃 하려면 주소창에 http://192.168.1.149:3002 입력해주세요 ');\n    next('/'); //홈으로 보냄\n  } else {\n    next(); //입장을 허용\n  }\n};\n\nvar onlyAuthUser = function onlyAuthUser(to, from, next) {\n  //로그인을 안한 상태면 페이지에 접속 불가, 인증된 회원만 받는다.\n  if (store.state.isLogin === false) {\n    //아직 로그인 안된 유저라서 막음\n    alert('로그인을 해야 접근 가능합니다.');\n    next('/signin'); //로그인페이지로\n  } else {\n    next(); //입장을 허용\n  }\n};\n\nexport default new Router({\n  mode: 'history',\n  //해시태그\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    //주소\n    name: 'home',\n    //추후home으로 변경가능\n    // beforeEnter: onlyAuthUser,\n    component: Home //연결\n\n  }, {\n    path: '/about',\n    name: 'about',\n    beforeEnter: onlyAuthUser,\n    component: About\n  }, {\n    path: '/notice',\n    name: 'notice',\n    // beforeEnter: onlyAuthUser,\n    component: Notice\n  }, {\n    path: '/engineerManage',\n    name: 'engineerManage',\n    beforeEnter: onlyAuthUser,\n    component: EngineerManage\n  }, {\n    path: '/hospitalInfo',\n    name: 'hospitalInfo',\n    beforeEnter: onlyAuthUser,\n    component: HospitalInfo\n  }, {\n    path: '/equipmentManage',\n    name: 'equipmentManage',\n    beforeEnter: onlyAuthUser,\n    component: EquipmentManage\n  }, {\n    path: '/serviceStatusManage',\n    name: 'serviceStatusManage',\n    beforeEnter: onlyAuthUser,\n    component: ServiceStatusManage\n  }, {\n    path: '/asManage',\n    name: 'asManage',\n    beforeEnter: onlyAuthUser,\n    component: AsManage\n  }, {\n    path: '/changePW',\n    name: 'changePW',\n    beforeEnter: onlyAuthUser,\n    component: ChangePW\n  }, {\n    path: '/qrScanner',\n    name: 'qrScanner',\n    // beforeEnter: onlyAuthUser,\n    component: QrScanner\n  }, {\n    path: '/EX',\n    name: 'EX',\n    // beforeEnter: onlyAuthUser,\n    component: EX\n  }, {\n    path: '/AddServiceReport',\n    name: 'AddServiceReport',\n    beforeEnter: onlyAuthUser,\n    component: AddServiceReport\n  }, {\n    path: '/signin',\n    name: 'signin',\n    beforeEnter: rejectAuthUser,\n    //router로 들어가기전에 미리 함수를 실행시키는 기능 가드로 막아줄 수 있음\n    component: Signin\n  }, {\n    path: '/canvas',\n    name: 'canvas',\n    component: Canvas\n  }]\n});",{"version":3,"sources":["C:/Users/User/Desktop/Vue-MESI(149)/frontend/src/router.js"],"names":["Vue","Router","Home","store","use","About","EngineerManage","Notice","HospitalInfo","EquipmentManage","ServiceStatusManage","AsManage","ChangePW","QrScanner","EX","AddServiceReport","Signin","Canvas","rejectAuthUser","to","from","next","state","isLogin","alert","onlyAuthUser","mode","base","process","env","BASE_URL","routes","path","name","component","beforeEnter"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\nimport store from './store'\n\nVue.use(Router)\n\n//연결된 하나만 component 불러옴, 웹페이지 속도 향상\nconst About = () => {\n    return import ('./views/About.vue')\n}\n\nconst EngineerManage = () => {\n    return import ('./views/EngineerManage.vue')\n}\nconst Notice = () => {\n    return import ('./views/Notice.vue')\n}\n\nconst HospitalInfo = () => {\n    return import ('./views/HospitalInfo.vue')\n}\nconst EquipmentManage = () => {\n    return import ('./views/EquipmentManage.vue')\n}\n\nconst ServiceStatusManage = () => {\n    return import ('./views/ServiceStatusManage.vue')\n}\nconst AsManage = () => {\n    return import ('./views/AsManage.vue')\n}\nconst ChangePW = () => {\n    return import ('./views/ChangePW.vue')\n}\nconst QrScanner = () => {\n    return import ('./views/QrScanner.vue')\n}\nconst EX = () => {\n    return import ('./views/EX.vue')\n}\n\nconst AddServiceReport = () => {\n    return import ('./views/AddServiceReport.vue')\n}\n\n\nconst Signin = () => {\n    return import ('./views/Signin.vue')\n}\n\nconst Canvas = () => {\n    return import ('./views/Canvas.vue')\n}\n\n\n\n\n\nconst rejectAuthUser = (to, from, next) => {\n    if (store.state.isLogin === true) {\n        //이미 로그인된 유저는 로그인 페이지 접속 못함\n        alert('로그아웃 하려면 주소창에 http://192.168.1.149:3002 입력해주세요 ')\n        next('/') //홈으로 보냄\n    } else {\n        next() //입장을 허용\n    }\n}\n\n\nconst onlyAuthUser = (to, from, next) => { //로그인을 안한 상태면 페이지에 접속 불가, 인증된 회원만 받는다.\n    if (store.state.isLogin === false) {\n        //아직 로그인 안된 유저라서 막음\n        alert('로그인을 해야 접근 가능합니다.')\n        next('/signin') //로그인페이지로\n    } else {\n        next() //입장을 허용\n    }\n}\n\n\nexport default new Router({\n    mode: 'history', //해시태그\n    base: process.env.BASE_URL,\n    routes: [{\n            path: '/', //주소\n            name: 'home', //추후home으로 변경가능\n            // beforeEnter: onlyAuthUser,\n            component: Home //연결\n        },\n\n        {\n            path: '/about',\n            name: 'about',\n            beforeEnter: onlyAuthUser,\n            component: About\n        },\n\n        {\n            path: '/notice',\n            name: 'notice',\n            // beforeEnter: onlyAuthUser,\n\n            component: Notice\n        },\n\n        {\n            path: '/engineerManage',\n            name: 'engineerManage',\n            beforeEnter: onlyAuthUser,\n\n            component: EngineerManage\n        },\n\n        {\n            path: '/hospitalInfo',\n            name: 'hospitalInfo',\n            beforeEnter: onlyAuthUser,\n\n            component: HospitalInfo\n        },\n\n        {\n            path: '/equipmentManage',\n            name: 'equipmentManage',\n            beforeEnter: onlyAuthUser,\n\n            component: EquipmentManage\n        },\n\n        {\n            path: '/serviceStatusManage',\n            name: 'serviceStatusManage',\n            beforeEnter: onlyAuthUser,\n\n            component: ServiceStatusManage\n        },\n\n        {\n            path: '/asManage',\n            name: 'asManage',\n            beforeEnter: onlyAuthUser,\n\n            component: AsManage\n        },\n        {\n            path: '/changePW',\n            name: 'changePW',\n            beforeEnter: onlyAuthUser,\n\n            component: ChangePW\n        },\n\n        {\n            path: '/qrScanner',\n            name: 'qrScanner',\n            // beforeEnter: onlyAuthUser,\n\n            component: QrScanner\n        },\n\n        {\n            path: '/EX',\n            name: 'EX',\n            // beforeEnter: onlyAuthUser,\n\n            component: EX\n        },\n\n        {\n            path: '/AddServiceReport',\n            name: 'AddServiceReport',\n            beforeEnter: onlyAuthUser,\n\n            component: AddServiceReport\n        },\n\n\n\n        {\n            path: '/signin',\n            name: 'signin',\n            beforeEnter: rejectAuthUser, //router로 들어가기전에 미리 함수를 실행시키는 기능 가드로 막아줄 수 있음\n            component: Signin\n        },\n\n        {\n            path: '/canvas',\n            name: 'canvas',\n            component: Canvas\n        },\n\n\n\n\n\n\n\n\n\n\n    ]\n})"]}]}