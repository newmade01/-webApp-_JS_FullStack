{"remainingRequest":"C:\\Users\\User\\Desktop\\cafe240\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\User\\Desktop\\cafe240\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\cafe240\\frontend\\src\\api\\auth.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\cafe240\\frontend\\src\\api\\auth.js","mtime":1613439161723},{"path":"C:\\Users\\User\\Desktop\\cafe240\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\cafe240\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\cafe240\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:/Users/User/Desktop/cafe240/frontend/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport store from '../store';\nimport axios from 'axios';\nimport index from './index';\nexport function login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return index.post('/signin', {\n              email: email,\n              password: password\n            });\n\n          case 2:\n            response = _context.sent;\n\n            if (response.status === 200) {\n              //로그인 성공일때 인증토큰 저장\n              store.commit('setToken', response.data.token);\n            }\n\n            return _context.abrupt(\"return\", response);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _login.apply(this, arguments);\n}",{"version":3,"sources":["C:/Users/User/Desktop/cafe240/frontend/src/api/auth.js"],"names":["store","axios","index","login","email","password","post","response","status","commit","data","token"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,gBAAsBC,KAAtB;AAAA;AAAA;;;oEAAO,iBAAqBC,KAArB,EAA4BC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACoBH,KAAK,CAACI,IAAN,CAAW,SAAX,EAAsB;AACzCF,cAAAA,KAAK,EAALA,KADyC;AAEzCC,cAAAA,QAAQ,EAARA;AAFyC,aAAtB,CADpB;;AAAA;AACGE,YAAAA,QADH;;AAMH,gBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAAE;AAC3BR,cAAAA,KAAK,CAACS,MAAN,CAAa,UAAb,EAAyBF,QAAQ,CAACG,IAAT,CAAcC,KAAvC;AAEH;;AATE,6CAUIJ,QAVJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import store from '../store'\r\nimport axios from 'axios';\r\nimport index from './index'\r\n\r\nexport async function login(email, password) {\r\n    const response = await index.post('/signin', {\r\n        email,\r\n        password,\r\n    });\r\n\r\n    if (response.status === 200) { //로그인 성공일때 인증토큰 저장\r\n        store.commit('setToken', response.data.token);\r\n\r\n    }\r\n    return response;\r\n}"]}]}